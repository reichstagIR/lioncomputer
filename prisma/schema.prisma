generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum Menu_Position {
  DASHBOARD
  HEADER
  MOBILE
  FOOTER
}

enum Menu_Type {
  LINK
  MEGA
}

model User {
  id        String    @id @default(cuid())
  name      String
  password  String?
  email     String    @unique
  accounts  Account[]
  sessions  Session[]
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  active    Boolean   @default(true)

  @@index([email])
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @id
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Menu {
  id            String        @id @default(cuid())
  menu_position Menu_Position
  role          Role
  Menu_Item     Menu_Item[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Menu_Item {
  id        String    @id @default(cuid())
  menuId    String
  menu      Menu      @relation(fields: [menuId], references: [id], onDelete: Cascade)
  menu_type Menu_Type
  order     Int
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([menuId])
}
